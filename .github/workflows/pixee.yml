name: Pixee

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      - run: |
          echo "Log level: $LEVEL"
        env:
          LEVEL: ${{ inputs.logLevel }}
          
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4.4.0
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      # Runs Maven with SonarScanner for Maven included
      # Look-up the project name and key in the SonarQube project settings
      - name: Build and Analyze
        id: sonarqube-analysis
        env:
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B compile org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.organization='gnair' \
          -Dsonar.projectKey='gnair_webgoat' \
          -Dsonar.projectName='WebGoat'

      - name: SonarQube Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          scanMetadataReportFile: target/sonar/report-task.txt
    
      - name: Upload SonarQube Results to Pixeebot
        uses: pixee/upload-tool-results-action@v2
        with:
          tool: sonar
          sonar-host-url: ${{ vars.SONAR_HOST_URL }}
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          sonar-component-key: 'gnair_webgoat'
          
